# Generated by Django 3.0.7 on 2020-07-12 00:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=30, null=True, verbose_name='First name')),
                ('last_name', models.CharField(max_length=30, null=True, verbose_name='Last name')),
                ('address', models.CharField(blank=True, max_length=30, null=True, verbose_name='Address')),
                ('contact_number', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='Contact Number')),
                ('avatar', models.ImageField(blank=True, default='avatars/default.png', null=True, upload_to='avatars/')),
                ('date_joined', models.DateField(auto_now_add=True, verbose_name='Date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.CharField(blank=True, max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name='OtherFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(max_length=1000)),
                ('area', models.FloatField()),
                ('max_area', models.IntegerField(blank=True, null=True)),
                ('renters_gender', models.IntegerField(choices=[('0', 'Nữ'), ('1', 'Nam'), ('2', 'Nam và nữ')], default='2')),
                ('furniture', models.TextField(max_length=500)),
                ('rent', models.IntegerField()),
                ('deposit', models.IntegerField(blank=True, null=True)),
                ('electricity_price', models.CharField(blank=True, max_length=50, null=True)),
                ('water_price', models.CharField(blank=True, max_length=50, null=True)),
                ('is_roommate', models.BooleanField(default=False)),
                ('is_room', models.BooleanField(default=False)),
                ('is_house', models.BooleanField(default=False)),
                ('is_apartment', models.BooleanField(default=False)),
                ('other_contact_info', models.CharField(blank=True, max_length=35, null=True)),
                ('poster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=400, verbose_name='Status')),
                ('is_active', models.BooleanField(default=False, verbose_name='Active')),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type_pro', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='motels.Post')),
                ('number_of_bedrooms', models.IntegerField()),
                ('number_of_toilets', models.IntegerField()),
                ('floor', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='motels.Post')),
                ('number_of_bedrooms', models.IntegerField()),
                ('number_of_toilets', models.IntegerField()),
                ('total_floor', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='motels.Post')),
                ('max_rent', models.IntegerField(blank=True, null=True)),
                ('number_of_rooms', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Roommate',
            fields=[
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='motels.Post')),
                ('number_of_roommate', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RegularUserHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='motels.Post')),
                ('post_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='message', to='motels.PostStatus')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='who', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostFollow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('follower', models.ManyToManyField(related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followed', to='motels.Post')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='photo_post/')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='motels.Post')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackForHiding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reason', to='motels.Feedback')),
                ('other_feedback', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='other_reason', to='motels.OtherFeedback')),
                ('regular_user_history', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='motels.RegularUserHistory')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type_dis', models.CharField(max_length=30)),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='motels.Province')),
            ],
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type_com', models.CharField(max_length=30)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commune', to='motels.District')),
            ],
        ),
        migrations.CreateModel(
            name='PostAddress',
            fields=[
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='motels.Post')),
                ('detailed_address', models.CharField(blank=True, max_length=150, null=True)),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='motels.Commune')),
            ],
        ),
    ]
